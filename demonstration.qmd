---
title: "R & Quarto: Elevating Research Transparency"
author: David Brocker 
format: 
  revealjs:
    theme: blood
    transition: slide
    preview-links: true
    chalkboard: true
editor: visual
---

## Roadmap {auto-animate=true}
::: incremental
1.  Research
2.  Teaching
3.  Service
4.  Documentation
5.  Fun
:::

## Research {auto-animate=true}
::: incremental
1.  [Example](https://davidbrocker.github.io/Morbid/)
2.  Import Data
:::

## Import Data {auto-animate=true}

``` {.r code-line-numbers="2"}
# Read and Clean Data
 mcu <- read_excel("UpdatedMCdata.xlsx")
```

## Import Data {auto-animate=true}

``` {.r code-line-numbers="6,8,10,12,14,16,34,36,38,40"}
# Read and Clean Data
 mcu <- read_excel("UpdatedMCdata.xlsx")
# Clean
 mcu_cln <- 
  mcu %>% 
  # Get participants who finished 
  filter(Finished == "1") %>% 
  # Get participants who consented 
  filter(`Consent?` == "1") %>% 
  # Remove unneeded columns 
  select(-DistributionChannel,-UserLanguage) %>% 
  # Clean variable names 
  rename_with(~gsub(" ","_",.x)) %>% 
  # Make Score Columns numeric 
  mutate_at(vars(SC0:SC14),as.numeric) %>% 
  # Remove SC0 and replace with scale name 
  rename( 
    Morbid_Curiosity_Overall = SC0, 
    Mind = SC1, 
    Body = SC2, 
    Violence = SC3,
    Paranormal = SC4, 
    Horror_Typology_Overall = SC5, 
    AJ = SC6, 
    WK = SC7, 
    DC = SC8, 
    Trait = SC9, 
    State_Pre = SC10, 
    Positive_Choice = SC11,
    Negative_Choice = SC12,
    PN_Choice = SC13, 
    State_Post = SC14) |>
  mutate(
    # Divide all MC Total Score by 24
    Morbid_Curiosity_Overall = Morbid_Curiosity_Overall/24,
    # Divide all HT Total Score by 19
    Horror_Typology_Overall = Horror_Typology_Overall/19 ) |>
    # Divide each MC Subscale Item by 6
    mutate_at(vars(Mind:Paranormal),scale_six) |> 
    # Divide each HT Subscale Item by 6
    mutate_at(vars(AJ:DC),scale_seven)
```

## Import Data {auto-animate=true}

``` {.r code-line-numbers="7"}
# Subset Scales
 mc_scale <- 
  mcu_cln |> 
  select(Morbid_Curiosity_Overall:State_Post)
```


```{r}
# Load in Packages-------------------------------------------
library(dplyr) # Tidying data 
library(stringr) # String manipulation 
library(ggplot2) # Plotting 
library(purrr) # Handling lists and iterations 
library(tidytext) # Tidying text 
library(forcats) # Dealing with categories 
library(readxl) # Read Excel 
library(patchwork) # Plotting Multiple Graphs 
library(tidyr) # Reshaping 
library(huxtable) # Making nice tables 
library(ggcorrplot) # Correlation heatmap
library(skimr) # Continuous Data
library(janitor) # Clean names/Chi Square
library(colorspace)

# Establish Functions

# Rescale MC and HT
# Morbid Curiosity
scale_six <- function(x) {(x/6)} 
# Horror Typology
scale_seven <- function(x) {(x/7)} 



# Read and Clean Data----------------------------------------
 mcu <- read_excel("UpdatedMCdata.xlsx")
# Clean
 mcu_cln <- 
  mcu %>% 
  # Get participants who finished 
  filter(Finished == "1") %>% 
  # Get participants who consented 
  filter(`Consent?` == "1") %>% 
  # Remove unneeded columns 
  select(-DistributionChannel,-UserLanguage) %>% 
  # Clean variable names 
  rename_with(~gsub(" ","_",.x)) %>% 
  # Make Score Columns numeric 
  mutate_at(vars(SC0:SC14),as.numeric) %>% 
  # Remove SC0 and replace with scale name 
  rename( 
    Morbid_Curiosity_Overall = SC0, 
    Mind = SC1, 
    Body = SC2, 
    Violence = SC3,
    Paranormal = SC4, 
    Horror_Typology_Overall = SC5, 
    AJ = SC6, 
    WK = SC7, 
    DC = SC8, 
    Trait = SC9, 
    State_Pre = SC10, 
    Positive_Choice = SC11,
    Negative_Choice = SC12,
    PN_Choice = SC13, 
    State_Post = SC14) |>
  mutate(
    # Divide all MC Total Score by 24
    Morbid_Curiosity_Overall = Morbid_Curiosity_Overall/24,
    # Divide all HT Total Score by 19
    Horror_Typology_Overall = Horror_Typology_Overall/19 ) |>
    # Divide each MC Subscale Item by 6
    mutate_at(vars(Mind:Paranormal),scale_six) |> 
    # Divide each HT Subscale Item by 6
    mutate_at(vars(AJ:DC),scale_seven)
# Subset Scales
 mc_scaled <- 
  mcu_cln %>% 
  select(Morbid_Curiosity_Overall:State_Post)
```

## Visualize Data

```{r}
# Clean variable name 
nheat <-  
  mc_scaled |>  
  rename(`Morbid Curiosity` = Morbid_Curiosity_Overall, 
         `Horror Typology` = Horror_Typology_Overall, 
         `Adrenaline Junkies` = AJ, 
         `White Knucklers` = WK,  
         `Dark Copers` = DC, 
         `State Anxiety (Pre)` = State_Pre, 
         `State Anxiety (Post)` = State_Post, 
         `Positive` = Positive_Choice, 
         `Negative` = Negative_Choice 
     
  ) |>  
  select(-PN_Choice) |>  
  cor() 
  
# Create Correlation (p) Matrix 
nheat_pmat <-  
  nheat |> 
  cor_pmat(sig.level = .05) 
  
  
# Plot 
#cor.plot <-  
  nheat |>  
  ggcorrplot( 
    outline.color = "white", 
    colors = diverge_hcl(3, palette='Blue Red'), 
    hc.order = T, 
    type = "lower", 
    lab = TRUE, 
    p.mat = nheat_pmat, 
    insig = "pch",
    tl.cex = 10, 
    tl.srt = 90, 
    lab_size = 2.5, 
    lab_col = "white", 
    legend.title = "Correlation", 
    ggtheme = theme_minimal()) + 
  labs(caption = "Fig 1. Correlation Matrix Across all numeric variables. Blank items represent non-significant correlations. \nHierarchical clustering is applied.") + theme(plot.caption = element_text(hjust = .5)) 

```

## Clean Data

::: incremental
1.  Identify any nonstandard naming conventions (tOgglECase, Spaces in Name, etc.)

2. Clean with *Regular Expressions* [^1] or `janitor`
:::

[^1]: Maybe another time!

## Name Cleaning

::: panel-tabset
## Before

```r
mcu |> names()
```


```{r}
mcu |> 
  names() |> 
  head()
```

## After

```r
mcu |> 
clean_names() |> 
  names()
```

```{r}
mcu |> 
clean_names() |> 
  names() |> 
  head()
```
:::

## Exploratory Data Analysis

::: incremental
1.  Visualize Possible Relationships

```{r}
#| echo: true
mcu_cln |> 
  select(where(is.numeric)) |> 
  pairs()
```
:::

## Exploratory Data Anlaysis

::: incremental
1.  Scan for possible outliers

```{r}
#| echo: true
mcu_cln |> 
  select(where(is.numeric)) |> 
  boxplot()
```
:::

## Teaching

1.  [Example](https://davidbrocker.github.io/DBPSYC3400/index.html)

::: incremental
1.  Include Interactivity

2.  Match Formatting

3.  $M = \Sigma\frac{x}{n}$

4.  Build Testing Materials
:::

## Service

::: incremental
1.  Evaluate Data

Internship Placements

1.  Present Findings

1.  Present Solutions

::: incremental
Emphasize Certain Areas

Direct Students to Specific Sites
:::
:::

## Documentation

::: incremental
1.  Convert 'static' Documents

\*\* Put Picture of PDF Manual Here \*\*

2.  Update and Modernize
:::

## Fun

::: incremental
1.  [Data is fun!](https://dbrocker.shinyapps.io/MusicMatchup/)
:::
